#pragma version 10

// This TEAL was generated by TEALScript v0.90.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// createApplication(string)void
*abi_route_createApplication:
	// proposal: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createApplication(string)void
	callsub createApplication
	int 1
	return

// createApplication(proposal: string): void
createApplication:
	proto 1 0

	// contracts/AidWave.algo.ts:15
	// this.proposal.value = proposal
	byte 0x70726f706f73616c // "proposal"
	frame_dig -1 // proposal: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put
	retsub

// bootstrap()uint64
*abi_route_bootstrap:
	// The ABI return prefix
	byte 0x151f7c75

	// execute bootstrap()uint64
	callsub bootstrap
	itob
	concat
	log
	int 1
	return

// bootstrap(): AssetID
bootstrap:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/AidWave.algo.ts:20
	// verifyTxn(this.txn, { sender: this.app.creator })
	// verify sender
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/AidWave.algo.ts:21
	// assert(!this.registeredAsaId.exists)
	txna Applications 0
	byte 0x726567697374657265644173614964 // "registeredAsaId"
	app_global_get_ex
	swap
	pop
	!
	assert

	// contracts/AidWave.algo.ts:22
	// registeredAsa = sendAssetCreation({
	//       configAssetTotal: 1_000,
	//       configAssetFreeze: this.app.address,
	//     })
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// contracts/AidWave.algo.ts:23
	// configAssetTotal: 1_000
	int 1_000
	itxn_field ConfigAssetTotal

	// contracts/AidWave.algo.ts:24
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury 0 // registeredAsa: uint64

	// contracts/AidWave.algo.ts:27
	// this.registeredAsaId.value = registeredAsa
	byte 0x726567697374657265644173614964 // "registeredAsaId"
	frame_dig 0 // registeredAsa: uint64
	app_global_put

	// contracts/AidWave.algo.ts:28
	// return registeredAsa;
	frame_dig 0 // registeredAsa: uint64

	// set the subroutine return value
	frame_bury 0
	retsub

// register(uint64)void
*abi_route_register:
	// registeredASA: uint64
	txna ApplicationArgs 1
	btoi

	// execute register(uint64)void
	callsub register
	int 1
	return

// register(registeredASA: AssetID): void
register:
	proto 1 0

	// contracts/AidWave.algo.ts:34
	// assert(this.txn.sender.assetBalance(this.registeredAsaId.value) === 0)
	txn Sender
	byte 0x726567697374657265644173614964 // "registeredAsaId"
	app_global_get
	asset_holding_get AssetBalance
	pop
	int 0
	==
	assert

	// contracts/AidWave.algo.ts:35
	// sendAssetTransfer({
	//       xferAsset: this.registeredAsaId.value,
	//       assetReceiver: this.txn.sender,
	//       assetAmount: 1,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/AidWave.algo.ts:36
	// xferAsset: this.registeredAsaId.value
	byte 0x726567697374657265644173614964 // "registeredAsaId"
	app_global_get
	itxn_field XferAsset

	// contracts/AidWave.algo.ts:37
	// assetReceiver: this.txn.sender
	txn Sender
	itxn_field AssetReceiver

	// contracts/AidWave.algo.ts:38
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/AidWave.algo.ts:40
	// sendAssetFreeze({
	//       freezeAsset: this.registeredAsaId.value,
	//       freezeAssetAccount: this.txn.sender,
	//       freezeAssetFrozen: true,
	//     })
	itxn_begin
	int afrz
	itxn_field TypeEnum

	// contracts/AidWave.algo.ts:41
	// freezeAsset: this.registeredAsaId.value
	byte 0x726567697374657265644173614964 // "registeredAsaId"
	app_global_get
	itxn_field FreezeAsset

	// contracts/AidWave.algo.ts:42
	// freezeAssetAccount: this.txn.sender
	txn Sender
	itxn_field FreezeAssetAccount

	// contracts/AidWave.algo.ts:43
	// freezeAssetFrozen: true
	int 1
	itxn_field FreezeAssetFrozen

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// vote(bool,uint64)void
*abi_route_vote:
	// registeredASA: uint64
	txna ApplicationArgs 2
	btoi

	// inFavor: bool
	txna ApplicationArgs 1
	dup
	len
	int 1
	==
	assert
	int 0
	getbit

	// execute vote(bool,uint64)void
	callsub vote
	int 1
	return

// vote(inFavor: boolean, registeredASA: AssetID): void
vote:
	proto 2 0

	// contracts/AidWave.algo.ts:50
	// assert(this.txn.sender.assetBalance(this.registeredAsaId.value) === 1)
	txn Sender
	byte 0x726567697374657265644173614964 // "registeredAsaId"
	app_global_get
	asset_holding_get AssetBalance
	pop
	int 1
	==
	assert

	// contracts/AidWave.algo.ts:51
	// this.votesTotal.value = this.votesTotal.value + 1
	byte 0x766f746573546f74616c // "votesTotal"
	dup
	app_global_get
	int 1
	+
	app_global_put

	// *if0_condition
	// contracts/AidWave.algo.ts:52
	// inFavor
	frame_dig -1 // inFavor: boolean
	bz *if0_end

	// *if0_consequent
	// contracts/AidWave.algo.ts:53
	// this.votesInFavor.value = this.votesInFavor.value + 1
	byte 0x766f746573496e4661766f72 // "votesInFavor"
	dup
	app_global_get
	int 1
	+
	app_global_put

*if0_end:
	retsub

// getProposal()string
*abi_route_getProposal:
	// The ABI return prefix
	byte 0x151f7c75

	// execute getProposal()string
	callsub getProposal
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	int 1
	return

// getProposal(): string
getProposal:
	proto 0 1

	// contracts/AidWave.algo.ts:59
	// return this.proposal.value;
	byte 0x70726f706f73616c // "proposal"
	app_global_get
	extract 2 0
	retsub

// getRegiseredASA()uint64
*abi_route_getRegiseredASA:
	// The ABI return prefix
	byte 0x151f7c75

	// execute getRegiseredASA()uint64
	callsub getRegiseredASA
	itob
	concat
	log
	int 1
	return

// getRegiseredASA(): AssetID
getRegiseredASA:
	proto 0 1

	// contracts/AidWave.algo.ts:63
	// return this.registeredAsaId.value;
	byte 0x726567697374657265644173614964 // "registeredAsaId"
	app_global_get
	retsub

// getVotes()(uint64,uint64)
*abi_route_getVotes:
	// The ABI return prefix
	byte 0x151f7c75

	// execute getVotes()(uint64,uint64)
	callsub getVotes
	concat
	log
	int 1
	return

// getVotes(): [uint64, uint64]
getVotes:
	proto 0 1

	// contracts/AidWave.algo.ts:68
	// return [this.votesInFavor.value, this.votesTotal.value];
	byte 0x766f746573496e4661766f72 // "votesInFavor"
	app_global_get
	itob
	byte 0x766f746573546f74616c // "votesTotal"
	app_global_get
	itob
	concat
	retsub

*create_NoOp:
	method "createApplication(string)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "bootstrap()uint64"
	method "register(uint64)void"
	method "vote(bool,uint64)void"
	method "getProposal()string"
	method "getRegiseredASA()uint64"
	method "getVotes()(uint64,uint64)"
	txna ApplicationArgs 0
	match *abi_route_bootstrap *abi_route_register *abi_route_vote *abi_route_getProposal *abi_route_getRegiseredASA *abi_route_getVotes
	err