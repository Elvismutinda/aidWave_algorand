#pragma version 10

// This TEAL was generated by TEALScript v0.90.2
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	err

// createApplication(string)void
*abi_route_createApplication:
	// proposal: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createApplication(string)void
	callsub createApplication
	int 1
	return

// createApplication(proposal: string): void
createApplication:
	proto 1 0

	// contracts/AidWave.algo.ts:13
	// this.proposal.value = proposal
	byte 0x70726f706f73616c // "proposal"
	frame_dig -1 // proposal: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put
	retsub

// vote(bool)void
*abi_route_vote:
	// inFavor: bool
	txna ApplicationArgs 1
	dup
	len
	int 1
	==
	assert
	int 0
	getbit

	// execute vote(bool)void
	callsub vote
	int 1
	return

// vote(inFavor: boolean): void
vote:
	proto 1 0

	// contracts/AidWave.algo.ts:18
	// this.voteTotal.value = this.voteTotal.value + 1
	byte 0x766f7465546f74616c // "voteTotal"
	dup
	app_global_get
	int 1
	+
	app_global_put

	// *if0_condition
	// contracts/AidWave.algo.ts:19
	// inFavor
	frame_dig -1 // inFavor: boolean
	bz *if0_end

	// *if0_consequent
	// contracts/AidWave.algo.ts:20
	// this.votesInFavor.value = this.votesInFavor.value + 1
	byte 0x766f746573496e4661766f72 // "votesInFavor"
	dup
	app_global_get
	int 1
	+
	app_global_put

*if0_end:
	retsub

// getProposal()string
*abi_route_getProposal:
	// The ABI return prefix
	byte 0x151f7c75

	// execute getProposal()string
	callsub getProposal
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	int 1
	return

// getProposal(): string
getProposal:
	proto 0 1

	// contracts/AidWave.algo.ts:26
	// return this.proposal.value;
	byte 0x70726f706f73616c // "proposal"
	app_global_get
	extract 2 0
	retsub

// getVotes()(uint64,uint64)
*abi_route_getVotes:
	// The ABI return prefix
	byte 0x151f7c75

	// execute getVotes()(uint64,uint64)
	callsub getVotes
	concat
	log
	int 1
	return

// getVotes(): [uint64, uint64]
getVotes:
	proto 0 1

	// contracts/AidWave.algo.ts:31
	// return [this.votesInFavor.value, this.voteTotal.value];
	byte 0x766f746573496e4661766f72 // "votesInFavor"
	app_global_get
	itob
	byte 0x766f7465546f74616c // "voteTotal"
	app_global_get
	itob
	concat
	retsub

*create_NoOp:
	method "createApplication(string)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication
	err

*call_NoOp:
	method "vote(bool)void"
	method "getProposal()string"
	method "getVotes()(uint64,uint64)"
	txna ApplicationArgs 0
	match *abi_route_vote *abi_route_getProposal *abi_route_getVotes
	err